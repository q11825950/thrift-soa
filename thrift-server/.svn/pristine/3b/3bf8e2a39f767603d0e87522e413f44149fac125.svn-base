package com.github.mql.rpc.registry;

import com.alibaba.fastjson.JSONObject;
import com.github.mql.rpc.configBean.Reference;
import com.github.mql.rpc.provider.RpcService;
import org.springframework.context.ApplicationContext;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/** 
 * @Description 这个是property的注册中心处理类
 * @ClassName   PropertyRegistry
 * @Date
 * @Author      mql
 */
public class PropertyRegistry implements BaseRegistry {


    /**
    * @Description: 无实现注册
     * @param serviceMap
     * @param application
    * @return: boolean
    * @Author: 孟庆霖
    * @Date: 2018/12/21
    */
    public boolean registry(Map<String, RpcService> serviceMap, ApplicationContext application) {

        return false;
    }
    


    /** 
    * @Description: 获取消费端的服务
     * @param application 
    * @return: java.util.List<java.lang.String> 
    * @Author: 孟庆霖
    * @Date: 2018/12/21 
    */
    public List<String> getRegistry(ApplicationContext application) {
        Reference referenceBean = application.getBean(Reference.class);
        String hosts = referenceBean.getServletList();
        if(hosts!=null && !"".equals(hosts)){
            List<String> list = new ArrayList<>();
            String[] hostArray = hosts.split(",");
            for (String host : hostArray) {
                String[] hostAndport = host.split(":");
                Map<String,String> map = new HashMap<>();
                if(hostAndport!=null && hostAndport.length>1){
                    map.put("host",hostAndport[0]);
                    map.put("port",hostAndport[1]);
                    list.add(JSONObject.toJSONString(map));
                    map.clear();
                }else{
                    throw new RuntimeException("服务端地址和端口信息错误！");
                }
            }
            return list;
        }
        return null;
    }
}
